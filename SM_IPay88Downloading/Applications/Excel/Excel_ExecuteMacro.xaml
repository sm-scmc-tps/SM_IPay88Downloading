<Activity mc:Ignorable="sap sap2010" x:Class="Excel_Execute_Macro" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_CNIPay88MacroFilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_LookingSheet" Type="InArgument(x:String)" />
    <x:Property Name="in_Ipay88InputFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="in_MacroNameImport" Type="InArgument(x:String)" />
    <x:Property Name="in_MacroNameUpload" Type="InArgument(x:String)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_MacroDelay" Type="InArgument(x:Int32)" />
    <x:Property Name="in_EntityName" Type="InArgument(x:String)" />
    <x:Property Name="in_CNIPay88MacroOutputFilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_MacroTimeout" Type="InArgument(x:Int32)" />
    <x:Property Name="in_MacroInputDelay" Type="InArgument(x:TimeSpan)" />
  </x:Members>
  <this:Excel_Execute_Macro.in_MacroTimeout>
    <InArgument x:TypeArguments="x:Int32" />
  </this:Excel_Execute_Macro.in_MacroTimeout>
  <this:Excel_Execute_Macro.in_MacroInputDelay>
    <InArgument x:TypeArguments="x:TimeSpan" />
  </this:Excel_Execute_Macro.in_MacroInputDelay>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Excel_Execute_Macro_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.Platform.SyncObjects</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.CV</x:String>
      <x:String>UiPath.Shared.ObjectLibrary</x:String>
      <x:String>UiPath.CV.Activities</x:String>
      <x:String>UiPath.CV.Activities.Interfaces</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.UIAutomationNext.Models</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Models.ExtractData</x:String>
      <x:String>UiPath.UIAutomationNext.Activities.Services.RuntimeAnalyze</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPathTeam.Subtitle.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.CV.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>SubtitleActivity</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText=" - DESCRIPTION: Execute Macro for Ipay&#xA; - PRE-CONDITION. Get the Payment Files from local folder&#xA; - POST ACTION. Generate CSV file from Payment Files" DisplayName="Excel_Execute_Macro" sap:VirtualizedContainerService.HintSize="2036,6356" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="issuccessfullyImportFile" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:ForEachFileX DisplayName="For Each File in Folder" Folder="[in_Ipay88InputFolderPath]" sap:VirtualizedContainerService.HintSize="2036,6276" sap2010:WorkflowViewState.IdRef="ForEachFileX_1" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
      <ui:ForEachFileX.Body>
        <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
          <ActivityAction.Argument1>
            <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
          </ActivityAction.Argument1>
          <ActivityAction.Argument2>
            <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
          </ActivityAction.Argument2>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="2002,5995" sap2010:WorkflowViewState.IdRef="Sequence_89">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Boolean" Name="isSuccessfullyUploadCSV" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If Condition="[CurrentFile.FullName.Contains(&quot;IPAY88.csv&quot;)]" DisplayName="If File is Payments file" sap:VirtualizedContainerService.HintSize="1968,5935" sap2010:WorkflowViewState.IdRef="If_36">
              <If.Then>
                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="1966,5717" sap2010:WorkflowViewState.IdRef="Sequence_90">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message Processing File" sap:VirtualizedContainerService.HintSize="1932,173" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Processing File: &quot; + CurrentFile.FullName.ToString]" />
                  <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope Macro file" sap:VirtualizedContainerService.HintSize="1932,5084" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_2">
                    <ueab:ExcelProcessScopeX.Body>
                      <ActivityAction x:TypeArguments="ui:IExcelProcess">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1898,4965" sap2010:WorkflowViewState.IdRef="Sequence_76">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" SensitivityLabel="{x:Null}" DisplayName="Use Excel File Macro Ipay file" sap:VirtualizedContainerService.HintSize="1864,4905" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_2" ResizeWindow="Maximize" SensitivityOperation="None" WorkbookPath="[in_CNIPay88MacroFilePath]">
                            <ueab:ExcelApplicationCard.Body>
                              <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1830,4573" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ueab:ForEachSheetX DisplayName="For Each Excel Sheet" sap:VirtualizedContainerService.HintSize="1796,4513" sap2010:WorkflowViewState.IdRef="ForEachSheetX_2" Workbook="[Excel]">
                                    <ueab:ForEachSheetX.Body>
                                      <ActivityAction x:TypeArguments="ue:WorksheetQuickHandle, x:Int32">
                                        <ActivityAction.Argument1>
                                          <DelegateInArgument x:TypeArguments="ue:WorksheetQuickHandle" Name="CurrentSheet" />
                                        </ActivityAction.Argument1>
                                        <ActivityAction.Argument2>
                                          <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                        </ActivityAction.Argument2>
                                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1762,4326" sap2010:WorkflowViewState.IdRef="Sequence_73">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If Condition="[CurrentSheet.Worksheet.ToString.Trim.ToLower.Equals(in_LookingSheet.Trim.ToLower)]" DisplayName="If Current Sheet is equals to Macro Sheet" sap:VirtualizedContainerService.HintSize="1728,4266" sap2010:WorkflowViewState.IdRef="If_30">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="1726,4048" sap2010:WorkflowViewState.IdRef="Sequence_70">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Parallel sap:VirtualizedContainerService.HintSize="1692,3988" sap2010:WorkflowViewState.IdRef="Parallel_1">
                                                  <Sequence DisplayName="Import Macro Sequence" sap:VirtualizedContainerService.HintSize="492,3918" sap2010:WorkflowViewState.IdRef="Sequence_95">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="418,57" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                                                      <ui:CommentOut.Body>
                                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,25" sap2010:WorkflowViewState.IdRef="Sequence_103">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <Delay Duration="[in_MacroInputDelay]" sap:VirtualizedContainerService.HintSize="416,113" sap2010:WorkflowViewState.IdRef="Delay_3" />
                                                        </Sequence>
                                                      </ui:CommentOut.Body>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:CommentOut>
                                                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="418,57" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                                                      <ui:CommentOut.Body>
                                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,190" sap2010:WorkflowViewState.IdRef="Sequence_104">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:Activate DelayBefore="{x:Null}" DelayMS="{x:Null}" DisplayName="Activate 'Sheet Tab'" sap:VirtualizedContainerService.HintSize="416,130" sap2010:WorkflowViewState.IdRef="Activate_1">
                                                            <ui:Activate.Target>
                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="d3ca79c9-c3d3-492c-ae7f-61171bb8e4dd" InformativeScreenshot="919a990eb51309ae7997855b85d97f89" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='*UIPath_CN IPAY88 Settlement Entry.xlsm - Excel' /&gt;&lt;uia automationid='SheetTab' name='IPAY88 Daily Report' role='Sheet Tab' /&gt;">
                                                                <ui:Target.TimeoutMS>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:Target.TimeoutMS>
                                                                <ui:Target.WaitForReady>
                                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                </ui:Target.WaitForReady>
                                                              </ui:Target>
                                                            </ui:Activate.Target>
                                                          </ui:Activate>
                                                        </Sequence>
                                                      </ui:CommentOut.Body>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:CommentOut>
                                                    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="418,621" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                                                      <TryCatch.Try>
                                                        <Sequence DisplayName="Try" sap:VirtualizedContainerService.HintSize="416,143" sap2010:WorkflowViewState.IdRef="Sequence_96">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:ExecuteMacro ContinueOnError="{x:Null}" MacroOutput="{x:Null}" DisplayName="Execute Macro" sap:VirtualizedContainerService.HintSize="382,83" sap2010:WorkflowViewState.IdRef="ExecuteMacro_1" MacroName="[in_MacroNameImport]" />
                                                        </Sequence>
                                                      </TryCatch.Try>
                                                      <TryCatch.Catches>
                                                        <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                                          <ActivityAction x:TypeArguments="s:Exception">
                                                            <ActivityAction.Argument>
                                                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                            </ActivityAction.Argument>
                                                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,224" sap2010:WorkflowViewState.IdRef="Sequence_97">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="382,164" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Warn" Message="[&quot;Macro Exception: &quot; + exception.Message]" />
                                                            </Sequence>
                                                          </ActivityAction>
                                                        </Catch>
                                                      </TryCatch.Catches>
                                                      <TryCatch.Finally>
                                                        <Sequence DisplayName="Finally" sap:VirtualizedContainerService.HintSize="416,89" sap2010:WorkflowViewState.IdRef="Sequence_98">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </Sequence>
                                                      </TryCatch.Finally>
                                                    </TryCatch>
                                                  </Sequence>
                                                  <Sequence DisplayName="Import Macro Popup Sequence" sap:VirtualizedContainerService.HintSize="1106,3918" sap2010:WorkflowViewState.IdRef="Sequence_85">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'Edit'" sap:VirtualizedContainerService.HintSize="1032,187" sap2010:WorkflowViewState.IdRef="TypeInto_5" Text="[CurrentFile.FullName+ &quot;[k(enter)]&quot;]">
                                                      <ui:TypeInto.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="009534e0-a8b5-4ec9-b0dd-6b565f9f3c1b" InformativeScreenshot="4158dee5b7760a29b142d06f36043e12" Selector="&lt;wnd app='excel.exe' cls='#*' title='Select a File to Import' /&gt;&lt;wnd ctrlid='1148' aaname='File name:' idx='1' /&gt;&lt;wnd ctrlid='1148' aaname='File name:' idx='1' /&gt;&lt;wnd ctrlid='1148' aaname='File name:' aastate='focusable' /&gt;">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:TypeInto.Target>
                                                    </ui:TypeInto>
                                                    <Delay Duration="[in_MacroInputDelay]" sap:VirtualizedContainerService.HintSize="1032,122" sap2010:WorkflowViewState.IdRef="Delay_2" />
                                                    <ui:UiElementExists DisplayName="Element Exists 'Static'" Exists="[issuccessfullyImportFile]" sap:VirtualizedContainerService.HintSize="1032,139" sap2010:WorkflowViewState.IdRef="UiElementExists_22">
                                                      <ui:UiElementExists.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="1fb2a4d4-4933-41c4-a012-4dafb2b7737d" InformativeScreenshot="3fc092906e5bd4828e0590aa776a890e" Selector="&lt;wnd app='excel.exe' cls='#*' title='Microsoft Excel' /&gt;&lt;wnd title='You selected*' /&gt;" TimeoutMS="[in_MacroTimeout]">
                                                          <ui:Target.WaitForReady>
                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                          </ui:Target.WaitForReady>
                                                        </ui:Target>
                                                      </ui:UiElementExists.Target>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:UiElementExists>
                                                    <If Condition="[issuccessfullyImportFile]" DisplayName="If issuccessfullyImportFile" sap:VirtualizedContainerService.HintSize="1032,3410" sap2010:WorkflowViewState.IdRef="If_31">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <If.Then>
                                                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="1030,3192" sap2010:WorkflowViewState.IdRef="Sequence_77">
                                                          <Sequence.Variables>
                                                            <Variable x:TypeArguments="x:Boolean" Name="isSheetUpdatedSuccessfully" />
                                                            <Variable x:TypeArguments="x:Boolean" Name="isLargeAmountPopup" />
                                                            <Variable x:TypeArguments="x:Boolean" Name="isRuntimeExist" />
                                                          </Sequence.Variables>
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <ui:Click AlterIfDisabled="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayBefore="[in_MacroDelay]" DelayMS="[in_MacroDelay]" DisplayName="Click OK 'Button'" sap:VirtualizedContainerService.HintSize="996,139" sap2010:WorkflowViewState.IdRef="Click_26" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                            <ui:Click.CursorPosition>
                                                              <ui:CursorPosition Position="Center">
                                                                <ui:CursorPosition.OffsetX>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:CursorPosition.OffsetX>
                                                                <ui:CursorPosition.OffsetY>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:CursorPosition.OffsetY>
                                                              </ui:CursorPosition>
                                                            </ui:Click.CursorPosition>
                                                            <ui:Click.Target>
                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ae943317-bc2f-4c94-a932-d2bdf46518b7" InformativeScreenshot="4afc9bb5a0fea8985d34e48277a07634" Selector="&lt;wnd app='excel.exe' cls='#*' title='Microsoft Excel' /&gt;&lt;wnd ctrlid='2' title='OK' aaname='OK' aastate='focusable' cls='Button' /&gt;">
                                                                <ui:Target.TimeoutMS>
                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                </ui:Target.TimeoutMS>
                                                                <ui:Target.WaitForReady>
                                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                </ui:Target.WaitForReady>
                                                              </ui:Target>
                                                            </ui:Click.Target>
                                                          </ui:Click>
                                                          <ui:UiElementExists DisplayName="Element Exists 'Static' Runtime Error" Exists="[isRuntimeExist]" sap:VirtualizedContainerService.HintSize="996,139" sap2010:WorkflowViewState.IdRef="UiElementExists_27">
                                                            <ui:UiElementExists.Target>
                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="47b5cfe7-8922-4b6c-8049-12bbe661c712" InformativeScreenshot="584c6b1ed1bb6dcd842666fbbce2c6f8" Selector="&lt;wnd app='excel.exe' omit:cls='#32770' title='Microsoft Visual Basic' /&gt;&lt;wnd omit:ctrlid='4803' title='Run-time error &amp;apos;13&amp;apos;:  Type mismatch' /&gt;" TimeoutMS="[in_MacroTimeout]">
                                                                <ui:Target.WaitForReady>
                                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                </ui:Target.WaitForReady>
                                                              </ui:Target>
                                                            </ui:UiElementExists.Target>
                                                          </ui:UiElementExists>
                                                          <If Condition="[isRuntimeExist]" DisplayName="If Runtime Exist" sap:VirtualizedContainerService.HintSize="996,417" sap2010:WorkflowViewState.IdRef="If_39">
                                                            <If.Then>
                                                              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,190" sap2010:WorkflowViewState.IdRef="Sequence_93">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <ui:Click AlterIfDisabled="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayBefore="[in_MacroDelay]" DelayMS="[in_MacroDelay]" DisplayName="Click End 'Button'" sap:VirtualizedContainerService.HintSize="382,130" sap2010:WorkflowViewState.IdRef="Click_31" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                                  <ui:Click.CursorPosition>
                                                                    <ui:CursorPosition Position="Center">
                                                                      <ui:CursorPosition.OffsetX>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:CursorPosition.OffsetX>
                                                                      <ui:CursorPosition.OffsetY>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:CursorPosition.OffsetY>
                                                                    </ui:CursorPosition>
                                                                  </ui:Click.CursorPosition>
                                                                  <ui:Click.Target>
                                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b07441de-4bda-49c2-842d-9c4e4615e72f" InformativeScreenshot="6f2815190f349d3dde6dce018d960c6f" Selector="&lt;wnd app='excel.exe' omit:cls='#32770' title='Microsoft Visual Basic' /&gt;&lt;wnd omit:ctrlid='4800' title='&amp;amp;End' /&gt;">
                                                                      <ui:Target.TimeoutMS>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:Target.TimeoutMS>
                                                                      <ui:Target.WaitForReady>
                                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                      </ui:Target.WaitForReady>
                                                                    </ui:Target>
                                                                  </ui:Click.Target>
                                                                </ui:Click>
                                                              </Sequence>
                                                            </If.Then>
                                                            <If.Else>
                                                              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89" sap2010:WorkflowViewState.IdRef="Sequence_94">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                              </Sequence>
                                                            </If.Else>
                                                          </If>
                                                          <ui:UiElementExists DisplayName="Element Exists 'Static'" Exists="[isLargeAmountPopup]" sap:VirtualizedContainerService.HintSize="996,139" sap2010:WorkflowViewState.IdRef="UiElementExists_23">
                                                            <ui:UiElementExists.Target>
                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="1fb2a4d4-4933-41c4-a012-4dafb2b7737d" InformativeScreenshot="094a4e9ab08a1ce663155df99dd925db" Selector="&lt;wnd app='excel.exe' cls='#32770' title='Microsoft Excel' /&gt;&lt;wnd ctrlid='4001' title='There is a large amount of information on the Clipboard. Do you*' /&gt;" TimeoutMS="[in_MacroTimeout]">
                                                                <ui:Target.WaitForReady>
                                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                </ui:Target.WaitForReady>
                                                              </ui:Target>
                                                            </ui:UiElementExists.Target>
                                                          </ui:UiElementExists>
                                                          <If Condition="[isLargeAmountPopup]" DisplayName="If LargeAmountPopup" sap:VirtualizedContainerService.HintSize="996,417" sap2010:WorkflowViewState.IdRef="If_32">
                                                            <If.Then>
                                                              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,190" sap2010:WorkflowViewState.IdRef="Sequence_79">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <ui:Click AlterIfDisabled="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayBefore="[in_MacroDelay]" DelayMS="[in_MacroDelay]" DisplayName="Click OK 'Button'" sap:VirtualizedContainerService.HintSize="382,130" sap2010:WorkflowViewState.IdRef="Click_27" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                                  <ui:Click.CursorPosition>
                                                                    <ui:CursorPosition Position="Center">
                                                                      <ui:CursorPosition.OffsetX>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:CursorPosition.OffsetX>
                                                                      <ui:CursorPosition.OffsetY>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:CursorPosition.OffsetY>
                                                                    </ui:CursorPosition>
                                                                  </ui:Click.CursorPosition>
                                                                  <ui:Click.Target>
                                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ae943317-bc2f-4c94-a932-d2bdf46518b7" InformativeScreenshot="4afc9bb5a0fea8985d34e48277a07634" Selector="&lt;wnd app='excel.exe' cls='#32770' title='Microsoft Excel' /&gt;&lt;wnd ctrlid='*' title='&amp;amp;Yes' /&gt;">
                                                                      <ui:Target.TimeoutMS>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:Target.TimeoutMS>
                                                                      <ui:Target.WaitForReady>
                                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                      </ui:Target.WaitForReady>
                                                                    </ui:Target>
                                                                  </ui:Click.Target>
                                                                </ui:Click>
                                                              </Sequence>
                                                            </If.Then>
                                                            <If.Else>
                                                              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89" sap2010:WorkflowViewState.IdRef="Sequence_80">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                              </Sequence>
                                                            </If.Else>
                                                          </If>
                                                          <ui:UiElementExists DisplayName="Element Exists 'Static'" Exists="[isSheetUpdatedSuccessfully]" sap:VirtualizedContainerService.HintSize="996,139" sap2010:WorkflowViewState.IdRef="UiElementExists_24">
                                                            <ui:UiElementExists.Target>
                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="1fb2a4d4-4933-41c4-a012-4dafb2b7737d" InformativeScreenshot="7c1f070fdbbdc5e44dcf2143a52d82ef" Selector="&lt;wnd app='excel.exe' cls='#32770' title='Microsoft Excel' /&gt;&lt;wnd ctrlid='65535' title='Data imported, pasted, SUMIF calculations added, dates formatted*' /&gt;" TimeoutMS="[in_MacroTimeout]">
                                                                <ui:Target.WaitForReady>
                                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                </ui:Target.WaitForReady>
                                                              </ui:Target>
                                                            </ui:UiElementExists.Target>
                                                          </ui:UiElementExists>
                                                          <If Condition="[isSheetUpdatedSuccessfully]" DisplayName="If isSheetUpdatedSuccessfully" sap:VirtualizedContainerService.HintSize="996,1742" sap2010:WorkflowViewState.IdRef="If_34">
                                                            <If.Then>
                                                              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="994,876" sap2010:WorkflowViewState.IdRef="Sequence_78">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <ui:Click AlterIfDisabled="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayBefore="[in_MacroDelay]" DelayMS="[in_MacroDelay]" DisplayName="Click 'Button'" sap:VirtualizedContainerService.HintSize="960,139" sap2010:WorkflowViewState.IdRef="Click_28" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                                  <ui:Click.CursorPosition>
                                                                    <ui:CursorPosition Position="Center">
                                                                      <ui:CursorPosition.OffsetX>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:CursorPosition.OffsetX>
                                                                      <ui:CursorPosition.OffsetY>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:CursorPosition.OffsetY>
                                                                    </ui:CursorPosition>
                                                                  </ui:Click.CursorPosition>
                                                                  <ui:Click.Target>
                                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ae943317-bc2f-4c94-a932-d2bdf46518b7" InformativeScreenshot="726c55fefb80983221ad50647f43ce19" Selector="&lt;wnd app='excel.exe' cls='#32770' title='Microsoft Excel' /&gt;&lt;wnd ctrlid='2' title='OK' /&gt;">
                                                                      <ui:Target.TimeoutMS>
                                                                        <InArgument x:TypeArguments="x:Int32" />
                                                                      </ui:Target.TimeoutMS>
                                                                      <ui:Target.WaitForReady>
                                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                      </ui:Target.WaitForReady>
                                                                    </ui:Target>
                                                                  </ui:Click.Target>
                                                                </ui:Click>
                                                                <Parallel DisplayName="Parallel Import Macro" sap:VirtualizedContainerService.HintSize="960,677" sap2010:WorkflowViewState.IdRef="Parallel_2">
                                                                  <ui:ExecuteMacro ContinueOnError="{x:Null}" MacroOutput="{x:Null}" DisplayName="Execute Import Macro" sap:VirtualizedContainerService.HintSize="374,607" sap2010:WorkflowViewState.IdRef="ExecuteMacro_3" MacroName="[in_MacroNameUpload]" />
                                                                  <Sequence sap:VirtualizedContainerService.HintSize="492,607" sap2010:WorkflowViewState.IdRef="Sequence_87">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <ui:UiElementExists DisplayName="Element Exists 'Static'" Exists="[isSuccessfullyUploadCSV]" sap:VirtualizedContainerService.HintSize="418,139" sap2010:WorkflowViewState.IdRef="UiElementExists_25">
                                                                      <ui:UiElementExists.Target>
                                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="1fb2a4d4-4933-41c4-a012-4dafb2b7737d" InformativeScreenshot="48e462f5772af759fa23a4d0376af0f7" Selector="&lt;wnd app='excel.exe' cls='#*' title='Microsoft Excel' /&gt;&lt;wnd ctrlid='*' title='CSV file has been created successfully! Saved*' /&gt;" TimeoutMS="[in_MacroTimeout]">
                                                                          <ui:Target.WaitForReady>
                                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                          </ui:Target.WaitForReady>
                                                                        </ui:Target>
                                                                      </ui:UiElementExists.Target>
                                                                    </ui:UiElementExists>
                                                                    <If Condition="[isSuccessfullyUploadCSV]" DisplayName="If isSuccessfullyUploadCSV" sap:VirtualizedContainerService.HintSize="418,408" sap2010:WorkflowViewState.IdRef="If_33">
                                                                      <If.Then>
                                                                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,190" sap2010:WorkflowViewState.IdRef="Sequence_81">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                          <ui:Click AlterIfDisabled="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayBefore="[in_MacroDelay]" DelayMS="[in_MacroDelay]" DisplayName="Click 'Button'" sap:VirtualizedContainerService.HintSize="382,130" sap2010:WorkflowViewState.IdRef="Click_30" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                                            <ui:Click.CursorPosition>
                                                                              <ui:CursorPosition Position="Center">
                                                                                <ui:CursorPosition.OffsetX>
                                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                                </ui:CursorPosition.OffsetX>
                                                                                <ui:CursorPosition.OffsetY>
                                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                                </ui:CursorPosition.OffsetY>
                                                                              </ui:CursorPosition>
                                                                            </ui:Click.CursorPosition>
                                                                            <ui:Click.Target>
                                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ae943317-bc2f-4c94-a932-d2bdf46518b7" InformativeScreenshot="726c55fefb80983221ad50647f43ce19" Selector="&lt;wnd app='excel.exe' cls='#32770' title='Microsoft Excel' /&gt;&lt;wnd ctrlid='2' title='OK' /&gt;">
                                                                                <ui:Target.TimeoutMS>
                                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                                </ui:Target.TimeoutMS>
                                                                                <ui:Target.WaitForReady>
                                                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                                </ui:Target.WaitForReady>
                                                                              </ui:Target>
                                                                            </ui:Click.Target>
                                                                          </ui:Click>
                                                                        </Sequence>
                                                                      </If.Then>
                                                                      <If.Else>
                                                                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89" sap2010:WorkflowViewState.IdRef="Sequence_82">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                        </Sequence>
                                                                      </If.Else>
                                                                    </If>
                                                                  </Sequence>
                                                                </Parallel>
                                                              </Sequence>
                                                            </If.Then>
                                                            <If.Else>
                                                              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="994,737" sap2010:WorkflowViewState.IdRef="Sequence_83">
                                                                <sap:WorkflowViewStateService.ViewState>
                                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  </scg:Dictionary>
                                                                </sap:WorkflowViewStateService.ViewState>
                                                                <Parallel DisplayName="Parallel Upload Macro" sap:VirtualizedContainerService.HintSize="960,677" sap2010:WorkflowViewState.IdRef="Parallel_3">
                                                                  <ui:ExecuteMacro ContinueOnError="{x:Null}" MacroOutput="{x:Null}" DisplayName="Execute Upload Macro" sap:VirtualizedContainerService.HintSize="374,607" sap2010:WorkflowViewState.IdRef="ExecuteMacro_5" MacroName="[in_MacroNameUpload]" />
                                                                  <Sequence sap:VirtualizedContainerService.HintSize="492,607" sap2010:WorkflowViewState.IdRef="Sequence_102">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <ui:UiElementExists DisplayName="Element Exists 'Static'" sap:VirtualizedContainerService.HintSize="418,139" sap2010:WorkflowViewState.IdRef="UiElementExists_28">
                                                                      <ui:UiElementExists.Exists>
                                                                        <OutArgument x:TypeArguments="x:Boolean">
                                                                          <VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="isSuccessfullyUploadCSV" sap2010:WorkflowViewState.IdRef="VisualBasicReference`1_1" />
                                                                        </OutArgument>
                                                                      </ui:UiElementExists.Exists>
                                                                      <ui:UiElementExists.Target>
                                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="1fb2a4d4-4933-41c4-a012-4dafb2b7737d" InformativeScreenshot="48e462f5772af759fa23a4d0376af0f7" Selector="&lt;wnd app='excel.exe' cls='#*' title='Microsoft Excel' /&gt;&lt;wnd ctrlid='*' title='CSV file has been created successfully! Saved*' /&gt;" TimeoutMS="[in_MacroTimeout]">
                                                                          <ui:Target.WaitForReady>
                                                                            <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                          </ui:Target.WaitForReady>
                                                                        </ui:Target>
                                                                      </ui:UiElementExists.Target>
                                                                    </ui:UiElementExists>
                                                                    <If Condition="[isSuccessfullyUploadCSV]" DisplayName="If isSuccessfullyUploadCSV" sap:VirtualizedContainerService.HintSize="418,408" sap2010:WorkflowViewState.IdRef="If_41">
                                                                      <If.Then>
                                                                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,190" sap2010:WorkflowViewState.IdRef="Sequence_100">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                          <ui:Click AlterIfDisabled="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DelayBefore="[in_MacroDelay]" DelayMS="[in_MacroDelay]" DisplayName="Click OK 'Button'" sap:VirtualizedContainerService.HintSize="382,130" sap2010:WorkflowViewState.IdRef="Click_32" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                                            <ui:Click.CursorPosition>
                                                                              <ui:CursorPosition Position="Center">
                                                                                <ui:CursorPosition.OffsetX>
                                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                                </ui:CursorPosition.OffsetX>
                                                                                <ui:CursorPosition.OffsetY>
                                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                                </ui:CursorPosition.OffsetY>
                                                                              </ui:CursorPosition>
                                                                            </ui:Click.CursorPosition>
                                                                            <ui:Click.Target>
                                                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="ae943317-bc2f-4c94-a932-d2bdf46518b7" InformativeScreenshot="726c55fefb80983221ad50647f43ce19" Selector="&lt;wnd app='excel.exe' cls='#32770' title='Microsoft Excel' /&gt;&lt;wnd ctrlid='2' title='OK' /&gt;">
                                                                                <ui:Target.TimeoutMS>
                                                                                  <InArgument x:TypeArguments="x:Int32" />
                                                                                </ui:Target.TimeoutMS>
                                                                                <ui:Target.WaitForReady>
                                                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                                </ui:Target.WaitForReady>
                                                                              </ui:Target>
                                                                            </ui:Click.Target>
                                                                          </ui:Click>
                                                                        </Sequence>
                                                                      </If.Then>
                                                                      <If.Else>
                                                                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89" sap2010:WorkflowViewState.IdRef="Sequence_101">
                                                                          <sap:WorkflowViewStateService.ViewState>
                                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                            </scg:Dictionary>
                                                                          </sap:WorkflowViewStateService.ViewState>
                                                                        </Sequence>
                                                                      </If.Else>
                                                                    </If>
                                                                  </Sequence>
                                                                </Parallel>
                                                              </Sequence>
                                                            </If.Else>
                                                          </If>
                                                        </Sequence>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="1030,89" sap2010:WorkflowViewState.IdRef="Sequence_84">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                  </Sequence>
                                                </Parallel>
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="1726,89" sap2010:WorkflowViewState.IdRef="Sequence_71">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </ActivityAction>
                                    </ueab:ForEachSheetX.Body>
                                  </ueab:ForEachSheetX>
                                </Sequence>
                              </ActivityAction>
                            </ueab:ExcelApplicationCard.Body>
                          </ueab:ExcelApplicationCard>
                        </Sequence>
                      </ActivityAction>
                    </ueab:ExcelProcessScopeX.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ueab:ExcelProcessScopeX>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Generic_MoveGeneratedMacroCSVFile - Invoke Workflow File (Applications\Common\Generic_MoveGeneratedMacroCSVFile.xaml)" sap:VirtualizedContainerService.HintSize="1932,177" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Applications\Common\Generic_MoveGeneratedMacroCSVFile.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_DownloadsFolderPath">[in_Config("DownloadsFolderPath").ToString]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Ipay88InputFolderPath">[in_Ipay88InputFolderPath]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_CSVMacroFolder">[in_Config("CSVMacroFolder").ToString]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:RenameFileX DisplayName="Rename File" FilePath="[in_CNIPay88MacroFilePath]" sap:VirtualizedContainerService.HintSize="1932,175" sap2010:WorkflowViewState.IdRef="RenameFileX_1" KeepExtension="True" NewName="[in_CNIPay88MacroOutputFilePath.Replace(&quot;EntityName&quot;,in_EntityName)]" />
                  <ui:Continue sap:VirtualizedContainerService.HintSize="1932,48" sap2010:WorkflowViewState.IdRef="Continue_1" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="1966,89" sap2010:WorkflowViewState.IdRef="Sequence_91">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEachFileX.Body>
    </ui:ForEachFileX>
  </Sequence>
</Activity>